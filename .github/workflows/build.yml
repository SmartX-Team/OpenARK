name: Build => Test => Deploy Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

  REGISTRY: quay.io
  REGISTRY_USER: kerryeon
  REGISTRY_REPOSITORY: ulagbulag-village
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  RELEASE_NAME: NetAI Cloud
  IMAGE_NAME: netai-cloud

  ALPINE_VERSION: "3.16"
  K8S_VERSION: "1.24.4"
  ROCKYLINUX_VERSION: "8"
  UBUNTU_VERSION: rolling

jobs:
  build-rust:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build
        run: cargo build --all --workspace --verbose

      - name: Run tests
        run: cargo test --all --workspace --verbose

  build-and-push-image:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest
          context: "."
          containerfiles: |
            ./Dockerfile
          build-args: |
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-bootstrap-node:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-bootstrap-node
          tags: latest
          context: ./templates/bootstrap/node
          containerfiles: |
            ./templates/bootstrap/node/Dockerfile
          build-args: |
            ROCKYLINUX_VERSION=${{ env.ROCKYLINUX_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-ipmitool:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-ipmitool
          tags: latest
          context: ./templates/ipmitool
          containerfiles: |
            ./templates/ipmitool/Dockerfile
          build-args: |
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-ipxe:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        continue-on-error: true # ignore errors on building iPXE
        with:
          image: ${{ env.IMAGE_NAME }}-ipxe
          tags: latest
          context: ./templates/ipxe
          containerfiles: |
            ./templates/ipxe/Dockerfile
          build-args: |
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
            UBUNTU_VERSION=${{ env.UBUNTU_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: >
          ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
          && steps.build-and-push-image.outcome == 'success'
          && steps.build-and-push-image.conclusion == 'success'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        if: >
          steps.build-and-push-image.outcome == 'success'
          && steps.build-and-push-image.conclusion == 'success'
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-snapshot-git:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-snapshot-git
          tags: latest
          context: ./templates/snapshot/git
          containerfiles: |
            ./templates/snapshot/git/Dockerfile
          build-args: |
            K8S_VERSION=${{ env.K8S_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-upgrade-csi-rook-ceph:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-upgrade-csi-rook-ceph
          tags: latest
          context: ./templates/csi/rook-ceph
          containerfiles: |
            ./templates/csi/rook-ceph/Dockerfile
          build-args: |
            K8S_VERSION=${{ env.K8S_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-upgrade-gpu-nvidia:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-upgrade-gpu-nvidia
          tags: latest
          context: ./templates/gpu/nvidia
          containerfiles: |
            ./templates/gpu/nvidia/Dockerfile
          build-args: |
            K8S_VERSION=${{ env.K8S_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-upgrade-ipis:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-upgrade-ipis
          tags: latest
          context: ./templates/ipis
          containerfiles: |
            ./templates/ipis/Dockerfile
          build-args: |
            K8S_VERSION=${{ env.K8S_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-and-push-image-upgrade-kiss:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ${{ env.REGISTRY }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build Image
        id: build-and-push-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}-upgrade-kiss
          tags: latest
          context: ./templates/kiss
          containerfiles: |
            ./templates/kiss/Dockerfile
          build-args: |
            K8S_VERSION=${{ env.K8S_VERSION }}

      - name: Push To ${{ env.REGISTRY }}
        id: push-to-quay
        if: ${{ github.repository }} == ${{ env.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-and-push-image.outputs.image }}
          tags: ${{ steps.build-and-push-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPOSITORY }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  release:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - build-and-push-image
      - build-and-push-image-bootstrap-node
      - build-and-push-image-ipmitool
      - build-and-push-image-ipxe
      - build-and-push-image-snapshot-git
      - build-and-push-image-upgrade-csi-rook-ceph
      - build-and-push-image-upgrade-gpu-nvidia
      - build-and-push-image-upgrade-ipis
      - build-and-push-image-upgrade-kiss
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Release
        uses: rymndhng/release-on-push-action@master
        with:
          release_name: Automatic Release of Cutting-Edge ${{ env.RELEASE_NAME }}
          release_body: Committed as ${{ github.sha }}
          bump_version_scheme: patch
          use_github_release_notes: false
