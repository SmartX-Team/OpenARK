[package]
name = "kubegraph-market-solver"

authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["full"]
full = ["df-full", "market-solver-full"]

# Configure DataFrame
df-full = ["df-polars"]
df-polars = [
    "kubegraph-api/df-polars",
    "kubegraph-market-solver-api/df-polars",
    "kubegraph-market-solver-trivial/df-polars",
]

# Configure Market Solvers
market-solver-full = ["market-solver-trivial"]
market-solver-trivial = ["kubegraph-market-solver-trivial"]

# TLS
openssl-tls = [
    "kubegraph-api/openssl-tls",
    "kubegraph-market-client/openssl-tls",
    "kubegraph-market-solver-api/openssl-tls",
    "kubegraph-market-solver-trivial?/openssl-tls",
]
rustls-tls = [
    "kubegraph-api/rustls-tls",
    "kubegraph-market-client/rustls-tls",
    "kubegraph-market-solver-api/rustls-tls",
    "kubegraph-market-solver-trivial?/rustls-tls",
]

[dependencies]
ark-core = { path = "../../../ark/core", features = ["signal"] }
kubegraph-api = { path = "../../api", default-features = false }
kubegraph-market-client = { path = "../client", default-features = false }
kubegraph-market-solver-api = { path = "./api", default-features = false }
kubegraph-market-solver-trivial = { path = "./trivial", optional = true, default-features = false }

anyhow = { workspace = true }
async-trait = { workspace = true }
clap = { workspace = true }
futures = { workspace = true }
serde = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true }
