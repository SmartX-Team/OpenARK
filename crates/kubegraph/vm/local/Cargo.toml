[package]
name = "kubegraph-vm-local"

authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["full"]
full = [
    "connector-full",
    "df-full",
    "function-full",
    "graph-full",
    "solver-full",
    "visualizer-full",
]

# Configure Connectors
connector-full = ["connector-fake", "connector-local", "connector-prometheus"]
connector-fake = [
    "kubegraph-api/connector-fake",
    "kubegraph-connector-fake",
    "kubegraph-connector-local?/connector-fake",
    "kubegraph-connector-prometheus?/connector-fake",
]
connector-local = [
    "kubegraph-api/connector-local",
    "kubegraph-connector-fake?/connector-local",
    "kubegraph-connector-local",
    "kubegraph-connector-prometheus?/connector-local",
]
connector-prometheus = [
    "kubegraph-api/connector-prometheus",
    "kubegraph-connector-fake?/connector-prometheus",
    "kubegraph-connector-local?/connector-prometheus",
    "kubegraph-connector-prometheus",
]

# Configure DataFrame
df-full = ["df-polars"]
df-polars = [
    "kubegraph-api/df-polars",
    "kubegraph-dependency-solver/df-polars",
    "kubegraph-runner/df-polars",
    "kubegraph-solver-ortools?/df-polars",
    "kubegraph-visualizer-egui?/df-polars",
]

# Configure Functions
function-full = ["function-fake", "function-webhook"]
function-fake = [
    "kubegraph-api/function-fake",
    "kubegraph-dependency-solver/function-fake",
    "kubegraph-runner/function-fake",
]
function-webhook = [
    "kubegraph-api/function-webhook",
    "kubegraph-dependency-solver/function-webhook",
    "kubegraph-runner/function-webhook",
]

# Configure Graph Databases
graph-full = ["graph-memory", "graph-memory"]
graph-local = ["kubegraph-graph-local"]
graph-memory = ["kubegraph-graph-memory"]

# Configure Solvers
solver-full = ["solver-ortools"]
solver-ortools = ["kubegraph-solver-ortools"]

# Configure Visualizers
visualizer-auto = ["visualizer-egui"]
visualizer-full = ["visualizer-egui"]
visualizer-egui = ["kubegraph-visualizer-egui"]

[dependencies]
kubegraph-api = { path = "../../api", default-features = false }
kubegraph-connector-fake = { path = "../../connector/fake", optional = true, default-features = false }
kubegraph-connector-local = { path = "../../connector/local", optional = true, default-features = false }
kubegraph-connector-prometheus = { path = "../../connector/prometheus", optional = true, default-features = false }
kubegraph-dependency-solver = { path = "../../dependency/solver", default-features = false }
kubegraph-graph-local = { path = "../../graph/local", optional = true, default-features = false }
kubegraph-graph-memory = { path = "../../graph/memory", optional = true, default-features = false }
kubegraph-runner = { path = "../../runner", default-features = false }
kubegraph-solver-ortools = { path = "../../solver/ortools", optional = true, default-features = false }
kubegraph-trader = { path = "../../trader", default-features = false }
kubegraph-visualizer-egui = { path = "../../visualizer/egui", optional = true, default-features = false }

anyhow = { workspace = true }
ark-core = { path = "../../../ark/core", features = ["signal"] }
async-trait = { workspace = true }
clap = { workspace = true }
futures = { workspace = true }
kube = { workspace = true, features = [
    "client",
    "runtime",
    "rustls-tls",
    "ws",
] }
schemars = { workspace = true }
serde = { workspace = true, features = ["derive"] }
tokio = { workspace = true, features = ["sync", "time"] }
tracing = { workspace = true }

[dev-dependencies]
kubegraph-solver-ortools = { path = "../../solver/ortools" }

polars = { workspace = true }
tokio = { workspace = true, features = ["full"] }
