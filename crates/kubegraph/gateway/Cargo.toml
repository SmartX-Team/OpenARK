[package]
name = "kubegraph-gateway"

authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "kubegraph"
path = "./src/main.rs"

[features]
default = ["full"]
full = [
    "connector-full",
    "db-auto",
    "df-full",
    "solver-full",
    "twin-full",
    "vm-full",
]

# Configure Connectors
connector-full = ["connector-prometheus", "connector-simulation"]
connector-prometheus = [
    "kubegraph-api/connector-prometheus",
    "kubegraph-connector-prometheus",
    "kubegraph-connector-simulation/connector-prometheus",
]
connector-simulation = [
    "kubegraph-api/connector-simulation",
    "kubegraph-connector-prometheus/connector-simulation",
    "kubegraph-connector-simulation",
]

# Configure Databases
db-auto = ["db-memory"]
db-local = ["kubegraph-db-local"]
db-memory = ["kubegraph-db-memory"]

# Configure DataFrame
df-full = ["df-polars"]
df-polars = [
    "kubegraph-api/df-polars",
    "kubegraph-solver-ortools?/df-polars",
    "kubegraph-twin-simulator?/df-polars",
    "kubegraph-vm-local?/df-polars",
]

# Configure Solvers
solver-full = ["solver-ortools"]
solver-ortools = ["kubegraph-solver-ortools"]

# Configure Twins
twin-full = ["twin-simulator"]
twin-simulator = ["kubegraph-twin-simulator"]

# Configure Virtual Machines
vm-full = ["vm-local"]
vm-local = ["kubegraph-vm-local"]

[dependencies]
ark-core = { path = "../../ark/core", features = ["actix-web", "signal"] }
kubegraph-api = { path = "../api", default-features = false }
kubegraph-db-local = { path = "../db/local", optional = true, default-features = false }
kubegraph-db-memory = { path = "../db/memory", optional = true, default-features = false }
kubegraph-connector-prometheus = { path = "../connector/prometheus", optional = true, default-features = false }
kubegraph-connector-simulation = { path = "../connector/simulation", optional = true, default-features = false }
kubegraph-solver-ortools = { path = "../solver/ortools", optional = true, default-features = false }
kubegraph-twin-simulator = { path = "../twin/simulator", optional = true, default-features = false }
kubegraph-vm-local = { path = "../vm/local", optional = true, default-features = false }

actix-web = { workspace = true }
actix-web-opentelemetry = { workspace = true }
anyhow = { workspace = true }
async-trait = { workspace = true }
futures = { workspace = true }
k8s-openapi = { workspace = true }
kube = { workspace = true, features = [
    "client",
    "runtime",
    "rustls-tls",
    "ws",
] }
opentelemetry = { workspace = true }
prometheus-http-query = { workspace = true, optional = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true }
