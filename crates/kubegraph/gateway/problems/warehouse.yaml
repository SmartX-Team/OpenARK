# ---
# apiVersion: kubegraph.ulagbulag.io/v1alpha1
# kind: NetworkConnector
# metadata:
#   name: warehouse
#   namespace: kubegraph
# spec:
#   metadata:
#     supply: payload
#   local:
#     path: ./problems/warehouse
---
apiVersion: kubegraph.ulagbulag.io/v1alpha1
kind: NetworkConnector
metadata:
  name: warehouse-sample-a
  namespace: kubegraph
spec:
  metadata:
    capacity: capacity
    payload: payload
    unit_cost: unit_cost
  fake:
    nodes:
      count: 1
      frame:
        name:
          type: Name
        capacity:
          type: Normal
          mean: 300
          std: 20
          valueType: I64
        payload:
          type: Normal
          mean: 200
          std: 20
          valueType: I64
        unit_cost:
          type: Constant
          value: 3
          valueType: I64
---
apiVersion: kubegraph.ulagbulag.io/v1alpha1
kind: NetworkConnector
metadata:
  name: warehouse-sample-b
  namespace: kubegraph
spec:
  metadata:
    capacity: capacity
    payload: payload
    unit_cost: unit_cost
  fake:
    nodes:
      count: 1
      frame:
        name:
          type: Name
        capacity:
          type: Normal
          mean: 300
          std: 20
          valueType: I64
        payload:
          type: Normal
          mean: 100
          std: 20
          valueType: I64
        unit_cost:
          type: Constant
          value: 1
          valueType: I64
---
apiVersion: kubegraph.ulagbulag.io/v1alpha1
kind: NetworkProblem
metadata:
  name: warehouse
  namespace: kubegraph
spec:
  metadata:
    supply: supply
  verbose: true
---
apiVersion: kubegraph.ulagbulag.io/v1alpha1
kind: NetworkFunction
metadata:
  name: warehouse-annotation
  namespace: kubegraph
spec:
  annotation: {}
  filter: payload >= 0
  script: |
    supply = payload;
---
apiVersion: kubegraph.ulagbulag.io/v1alpha1
kind: NetworkFunction
metadata:
  name: warehouse
  namespace: kubegraph
spec:
  # fake: {}
  webhook: {}
  filter: src != sink and src.supply > 0 and src.supply > sink.supply + 1
  script: |
    capacity = min(50, (src.supply - sink.supply) / 2);
    unit_cost = 1;
