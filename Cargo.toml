[workspace]
default-members = ["ark/cli"]
members = [
    "ark/api",
    "ark/cli",
    "ark/core",
    "ark/core/k8s",
    "dash/api",
    "dash/client",
    "dash/collector",
    "dash/controller",
    "dash/gateway",
    "dash/openapi",
    "dash/optimizer",                       # exclude(alpine)
    "dash/optimizer/api",
    "dash/optimizer/client",
    "dash/optimizer/fallback",
    "dash/pipe/api",
    "dash/pipe/connectors/liveness",
    "dash/pipe/connectors/storage",
    "dash/pipe/connectors/webcam",          # exclude(alpine)
    "dash/pipe/functions/ai",               # exclude(alpine)
    "dash/pipe/functions/ai/plugin",
    "dash/pipe/functions/identity",
    "dash/pipe/functions/performance-test",
    "dash/pipe/functions/python",           # exclude(alpine)
    "dash/pipe/provider",
    "dash/pipe/scheduler",
    "dash/provider",
    "dash/provider/api",
    "dash/provider/client",
    "dash/query/cli",
    "dash/query/provider",
    "dash/router",
    "kiss/ansible",
    "kiss/api",
    # "kiss/assets",
    "kiss/controller",
    "kiss/gateway",
    "kiss/manager",
    "kiss/monitor",
    "straw/api",
    "straw/provider",
    "vine/api",
    "vine/bastion",
    "vine/controller",
    "vine/plugin",
    "vine/rbac",
    "vine/session",
    "vine/storage",
]
resolver = "2"

[workspace.package]
authors = ["Ho Kim <ho.kim@ulagbulag.io>"]
description = "Deploy & Integrate & Manage your own Converged K8S Edge Clusters"
documentation = "https://docs.rs/kiss-api"
edition = "2021"
include = ["src/**/*.rs", "Cargo.toml"]
keywords = ["iac", "kubernetes", "openark"]
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
readme = "./README.md"
rust-version = "1.62"
homepage = "https://github.com/ulagbulag/OpenARK"
repository = "https://github.com/ulagbulag/OpenARK"
version = "0.1.0"

[workspace.dependencies]
actix-cors = { version = "0.6" }
actix-multipart = { version = "0.6", features = ["derive", "tempfile"] }
actix-web = { version = "4.4", default-features = false, features = [
    "macros",
    "rustls",
] }
actix-web-opentelemetry = { version = "0.16", features = ["metrics"] }
anyhow = { version = "1.0", features = ["backtrace"] }
argon2 = { version = "0.5" }
async-nats = { version = "0.33" }
async-recursion = { version = "1.0" }
async-stream = { version = "0.3" }
async-trait = { version = "0.1" }
base64 = { version = "0.21" }
byteorder = { version = "1.5" }
bytes = { version = "1.5" }
byte-unit = { version = "4.0" }
chrono = { version = "0.4", features = ["serde"] }
clap = { version = "4.4", features = ["derive", "env"] }
csv = { version = "1.3" }
ctrlc = { version = "3.4" }
# TODO: wait a PR to begin merged: 
# deltalake = { git = "https://github.com/delta-io/delta-rs.git", rev = "[TODO]", version = "0.17", features = [
deltalake = { git = "https://github.com/ArroyoSystems/delta-rs.git", rev = "4a376eb178b537f7e4091a8e88db95a3ce7feadc", version = "0.17", features = [
    "arrow",
    "datafusion",
    "datafusion-ext",
] }
derivative = { version = "2.2" }
dirs = { version = "5.0" }
email_address = { version = "0.2" }
futures = { version = "0.3" }
gethostname = { version = "0.4" }
home = { version = "0.5" }
http-cache-reqwest = { version = "0.11", features = ["manager-cacache"] }
image = { version = "0.24", default-features = false }
inflector = { package = "Inflector", version = "0.11" }
ipnet = { version = "2.9", features = ["schemars", "serde"] }
itertools = { version = "0.11" }
k8s-openapi = { version = "0.20", features = ["latest", "schemars"] }
kube = { version = "0.87", default-features = false }
mime = { version = "0.3" }
# FIXME: push a PR: rustls-tls feature support
minio = { git = "https://github.com/ulagbulag/minio-rs.git", default-features = false, features = [
    "rustls-tls",
] } # not deployed to crates.io
map-macro = { version = "0.2" }
maplit = { version = "1.0" }
ndarray = { version = "0.15" }
octocrab = { version = "0.31", default-features = false, features = ["rustls"] }
opencv = { version = "0.86", default-features = false }
opentelemetry = { version = "0.21", features = ["logs", "metrics", "trace"] }
opentelemetry-otlp = { version = "0.14", features = [
    "logs",
    "metrics",
    "trace",
] }
opentelemetry-proto = { version = "0.4", features = ["with-serde", "zpages"] }
opentelemetry_sdk = { version = "0.21", features = [
    "logs_level_enabled",
    "metrics",
    "rt-tokio",
    "trace",
] }
or-tools = { git = "https://github.com/ulagbulag/or-tools-rs", version = "0.1", default-features = false, features = [
    "build-native",
    "solver-all",
] }
ordered-float = { version = "4.1", default-features = false, features = [
    "bytemuck",
    "schemars",
    "serde",
    "std",
] }
procfs = { version = "0.16" }
pyo3 = { version = "0.20" }
rand = { version = "0.8" }
rdkafka = { version = "0.35", features = ["cmake-build"] }
regex = { version = "1.10" }
reqwest = { version = "0.11", default-features = false, features = [
    "json",
    "rustls-tls",
    "stream",
] }
reqwest-middleware = { version = "0.2" }
resolv-conf = { version = "0.7" }
rmp-serde = { version = "1.1" }
schemars = { version = "0.8", features = [
    "chrono",
    "derive",
    "preserve_order",
    "uuid1",
] }
sea-orm = { version = "0.12", features = [
    "macros",
    "runtime-tokio-rustls",
    "sqlx-postgres",
    "with-chrono",
    "with-json",
    "with-time",
    "with-uuid",
] }
semver = { version = "1.0" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
serde_yaml = { version = "0.9" }
sha2 = { version = "0.10" }
sio = { git = "https://github.com/ulagbulag/sio-rs.git" }
strum = { version = "0.25", features = ["derive"] }
tera = { version = "1.19" }
thiserror = { version = "1.0" }
tokio = { version = "1.33", features = ["macros", "rt"] }
tokio-stream = { version = "0.1" }
tonic = { version = "0.9" } # should be synced with opentelemetry-proto
tracing = { version = "0.1" }
tracing-opentelemetry = { version = "0.22", features = [
    "metrics",
    "tracing-log",
] }
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "fmt",
    "tracing-log",
] }
url = { version = "2.4", features = ["serde"] }
uuid = { version = "1.5", features = ["js", "serde", "v4"] }
which = { version = "5.0" }

[patch.crates-io]
schemars = { git = "https://github.com/ulagbulag/schemars" }
