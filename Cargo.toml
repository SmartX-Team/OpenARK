[workspace]
default-members = ["crates/ark/cli"]
members = [
    "crates/ark/api",
    "crates/ark/cli",
    "crates/ark/core",
    "crates/ark/core/k8s",
    "crates/dash/api",
    "crates/dash/broker/web",
    "crates/dash/client",
    "crates/dash/collector",
    "crates/dash/collector/api",
    "crates/dash/gateway",
    "crates/dash/openapi",
    "crates/dash/operator",
    "crates/dash/pipe/api",
    "crates/dash/pipe/connectors/liveness",
    "crates/dash/pipe/connectors/storage",
    "crates/dash/pipe/connectors/webcam",          # exclude(alpine)
    "crates/dash/pipe/functions/identity",
    "crates/dash/pipe/functions/performance-test",
    "crates/dash/pipe/functions/python",           # exclude(alpine)
    "crates/dash/pipe/functions/python/provider",  # exclude(alpine)
    "crates/dash/pipe/provider",
    "crates/dash/provider",
    "crates/dash/provider/api",
    "crates/dash/provider/client",
    "crates/dash/query/cli",
    "crates/dash/query/provider",
    "crates/kiss/ansible",
    "crates/kiss/api",
    # "crates/kiss/assets",
    "crates/kiss/cli",
    "crates/kiss/dns",
    "crates/kiss/gateway",
    "crates/kiss/manager",
    "crates/kiss/monitor",
    "crates/kiss/operator",
    "crates/kubegraph/api",
    "crates/kubegraph/connector/fake",
    "crates/kubegraph/connector/local",
    "crates/kubegraph/connector/prometheus",
    "crates/kubegraph/dependency/graph",
    "crates/kubegraph/dependency/solver",
    "crates/kubegraph/function/fake",
    "crates/kubegraph/function/webhook",
    "crates/kubegraph/gateway",
    "crates/kubegraph/graph/local",
    "crates/kubegraph/graph/memory",
    "crates/kubegraph/operator",
    "crates/kubegraph/parser",
    "crates/kubegraph/runner",
    "crates/kubegraph/simulator",
    "crates/kubegraph/solver/ortools",
    "crates/kubegraph/visualizer/egui",
    "crates/kubegraph/vm/http",
    "crates/kubegraph/vm/lazy",
    "crates/kubegraph/vm/local",
    "crates/straw/api",
    "crates/straw/provider",
    "crates/straw/provider/oci",
    "crates/straw/provider/python",
    "crates/straw/provider/python/standalone", # exclude(alpine)
    "crates/vine/api",
    "crates/vine/bastion",
    "crates/vine/operator",
    "crates/vine/plugin",
    "crates/vine/rbac",
    "crates/vine/session",
    "crates/vine/storage",
]
resolver = "2"

[workspace.package]
authors = ["Ho Kim <ho.kim@ulagbulag.io>"]
description = "Deploy & Integrate & Manage your own Converged K8S Edge Clusters"
documentation = "https://docs.rs/kiss-api"
edition = "2021"
include = ["src/**/*.rs", "Cargo.toml"]
keywords = ["iac", "kubernetes", "openark"]
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
readme = "./README.md"
rust-version = "1.78"
homepage = "https://github.com/ulagbulag/OpenARK"
repository = "https://github.com/ulagbulag/OpenARK"
version = "0.1.0"

[workspace.lints.clippy]
blocks_in_conditions = "allow" # opentelemetry tracing macro would be noisy

[workspace.dependencies]
actix-cors = { version = "0.7" }
actix-multipart = { version = "0.6", features = ["derive", "tempfile"] }
actix-web = { version = "4.6", default-features = false, features = [
    "macros",
    "rustls",
] }
actix-web-opentelemetry = { version = "0.18", features = ["metrics"] }
anyhow = { version = "1.0", features = ["backtrace"] }
arrow = { version = "51" } # should be synced with deltalake and lancedb
argon2 = { version = "0.5" }
async-nats = { version = "0.35" }
async-recursion = { version = "1.1" }
async-stream = { version = "0.3" }
async-trait = { version = "0.1" }
base64 = { version = "0.22" }
byteorder = { version = "1.5" }
bytes = { version = "1.6" }
byte-unit = { version = "5.1" }
chrono = { version = "0.4", features = ["serde"] }
clap = { version = "4.5", features = ["derive", "env"] }
csv = { version = "1.3" }
ctrlc = { version = "3.4" }
deltalake = { version = "0.17", features = [
    "datafusion",
    "datafusion-ext",
    "json",
    "s3",
] }
derivative = { version = "2.2" }
dirs = { version = "5.0" }
duration-string = { version = "0.4" }
eframe = { version = "0.27", default-features = false, features = [
    "accesskit",
    "default_fonts",
    "wayland",
    "web_screen_reader",
    "wgpu",
    "x11",
] }
egui = { version = "0.27" }
egui_graphs = { version = "0.20" }
email_address = { version = "0.2" }
futures = { version = "0.3" }
gethostname = { version = "0.4" }
glob = { version = "0.3" }
hickory-server = { version = "*", default-features = false, features = [
    "backtrace",
    "dns-over-https-rustls",
    "dnssec-ring",
] }
home = { version = "0.5" }
http-cache-reqwest = { version = "0.14", features = ["manager-cacache"] }
image = { version = "0.25", default-features = false }
inflector = { package = "Inflector", version = "0.11" }
ipnet = { version = "2.9", features = ["schemars", "serde"] }
itertools = { version = "0.13" }
k8s-openapi = { version = "0.22", features = ["latest", "schemars"] }
kube = { version = "0.91", default-features = false }
lalrpop = { version = "0.20" }
lalrpop-util = { version = "0.20", features = ["lexer", "unicode"] }
lancedb = { version = "0.5", default-features = false }
# langchain-rust = { version = "4.1", default-features = false }
mime = { version = "0.3" }
# FIXME: push a PR: rustls-tls feature support
minio = { git = "https://github.com/ulagbulag/minio-rs.git", version = "0.2.0-alpha", default-features = false, features = [
    "rustls-tls",
] } # not deployed to crates.io
map-macro = { version = "0.3" }
maplit = { version = "1.0" }
ndarray = { version = "0.15" }
num-traits = { version = "0.2" }
object_store = { version = "0.10", default-features = false }
octocrab = { version = "0.38", default-features = false, features = [
    "default-client",
    "rustls",
] }
opencv = { version = "0.92", default-features = false, features = [
    "clang-runtime",
] }
opentelemetry = { version = "0.23", features = ["logs", "metrics", "trace"] }
opentelemetry-appender-tracing = { version = "0.4", features = [
    # "experimental_metadata_attributes",
    "logs_level_enabled",
] }
opentelemetry-otlp = { version = "0.16", features = [
    "logs",
    "metrics",
    "trace",
] }
opentelemetry-proto = { version = "0.6", features = ["with-serde", "zpages"] }
opentelemetry_sdk = { version = "0.23", features = [
    "logs_level_enabled",
    "metrics",
    "rt-tokio",
    "trace",
] }
or-tools = { git = "https://github.com/ulagbulag/or-tools-rs", version = "0.1", default-features = false, features = [
    "build-native",
    "solver-all",
] }
# ort-sys = { version = "2.0.0-rc.2", features = [  # add onnxruntime library support for `langchain-rust` crate
#     "download-binaries",
#     "load-dynamic",
# ] }
ordered-float = { version = "4.2", default-features = false, features = [
    "bytemuck",
    "schemars",
    "serde",
    "std",
] }
petgraph = { version = "0.6" }
polars = { version = "0.40", features = [
    "diagonal_concat",
    "diff",
    "fmt",
    "lazy",
    # "nightly",  # include(nightly)
    "parquet",
    "performant",
    "random",
    "rank",
    "serde",
    "serde-lazy",
    "sql",
    "streaming",
] }
procfs = { version = "0.16" }
prometheus-http-query = { version = "0.8", default-features = false, features = [
    "rustls-tls",
] }
pyo3 = { version = "0.21" }
r2r = { version = "0.9" }
rand = { version = "0.8" }
rand_distr = { version = "0.4" }
rdkafka = { version = "0.36", features = ["cmake-build"] }
regex = { version = "1.10" }
reqwest = { version = "0.12", default-features = false, features = [
    "json",
    "rustls-tls",
    "stream",
] }
reqwest-middleware = { version = "0.3" }
resolv-conf = { version = "0.7" }
rmp-serde = { version = "1.3" }
sas = { version = "0.1", default-features = false, features = [
    "numa",  # exclude(alpine)
    "rayon",
] }
schemars = { version = "0.8", features = [
    "chrono",
    "derive",
    "preserve_order",
    "uuid1",
] }
sea-orm = { version = "0.12", features = [
    "macros",
    "runtime-tokio-rustls",
    "sqlx-postgres",
    "with-chrono",
    "with-json",
    "with-time",
    "with-uuid",
] }
semver = { version = "1.0" }
serde = { version = "1.0", features = ["derive"] }
serde_cbor = { version = "0.11" }
serde_json = { version = "1.0" }
serde_yaml = { version = "0.9" } # NOTE: deprecated on Mar 25, 2024; who will take it over?
sha2 = { version = "0.10" }
sio = { git = "https://github.com/ulagbulag/sio-rs.git" }
sled = { version = "0.34" }
strum = { version = "0.26", features = ["derive"] }
tera = { version = "1.19" }
thiserror = { version = "1.0" }
tokio = { version = "1.37", features = ["macros", "rt"] }
tokio-stream = { version = "0.1" }
tonic = { version = "0.11", features = [
    "gzip",
] } # should be synced with opentelemetry-proto
tracing = { version = "0.1" }
tracing-opentelemetry = { version = "0.24", features = [
    "metrics",
    "tracing-log",
] } # should be synced with opentelemetry
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "fmt",
    "tracing-log",
] }
url = { version = "2.5", features = ["serde"] }
uuid = { version = "1.8", features = ["js", "serde", "v4"] }
which = { version = "6.0" }
winit = { version = "0.29", features = [
    "wayland",
] } # should be synced with eframe

[patch.crates-io]
# FIXME: Sync with the components
deltalake = { git = "https://github.com/delta-io/delta-rs", rev = "rust-v0.17.3" }
deltalake-aws = { git = "https://github.com/delta-io/delta-rs", rev = "rust-v0.17.3" }

# FIXME: Waiting for PR merged: https://github.com/GREsau/schemars/pull/255
schemars = { git = "https://github.com/ulagbulag/schemars" }
