---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ipis
spec:
  type: ClusterIP
  selector:
    name: postgres
    serviceType: ipdis-db-backend
  ports:
    - name: ipiis
      protocol: TCP
      port: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: ipis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres
      serviceType: ipdis-db-backend
  serviceName: postgres
  template:
    metadata:
      labels:
        name: postgres
        serviceType: ipdis-db-backend
    spec:
      affinity: # TODO: use service instead
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/first-node
                    operator: Exists
      dnsPolicy: ClusterFirstWithHostNet # TODO: use service instead
      hostNetwork: true # TODO: use service instead
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: ipiis
          image: docker.io/library/postgres:latest
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_DB
              value: ipdis
            - name: POSTGRES_USER
              value: ipis
          ports:
            - name: postgres
              protocol: TCP
              containerPort: 5432
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            # limits:
            #   cpu: "4"
            #   memory: 1Gi
          volumeMounts:
            - name: data
              mountPath: /data/postgres
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: ceph-block
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Ti
---
apiVersion: v1
kind: Service
metadata:
  name: ipdis-postgres
  namespace: ipis
spec:
  type: ClusterIP
  selector:
    name: ipdis-postgres
    serviceType: ipis-runtime
  ports:
    - name: ipiis
      protocol: TCP
      port: 9805
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipdis-postgres
  namespace: ipis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ipdis-postgres
      serviceType: ipis-runtime
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: ipdis-postgres
        serviceType: ipis-runtime
    spec:
      affinity: # TODO: use service instead
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/first-node
                    operator: Exists
      dnsPolicy: ClusterFirstWithHostNet # TODO: use service instead
      hostNetwork: true # TODO: use service instead
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: init-db
          image: quay.io/ulagbulag-village/ipdis:latest-postgres
          imagePullPolicy: Always
          command:
            - diesel
          args:
            - migration
            - run
          env:
            - name: RUST_LOG
              value: INFO
            - name: DATABASE_URL
              value: postgres://ipis@postgres/ipdis
            - name: DIESEL_CONFIG_FILE
              value: /sql/postgres/diesel.toml
            - name: MIGRATION_DIRECTORY
              value: /sql/postgres/migrations/
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            limits:
              cpu: 100m
              memory: 50Mi
      containers:
        - name: ipiis
          image: quay.io/ulagbulag-village/ipdis:latest-postgres
          imagePullPolicy: Always
          env:
            - name: RUST_LOG
              value: INFO
            - name: ipis_account_me
              valueFrom:
                secretKeyRef:
                  name: account-root-ca
                  key: private_key
            - name: ipiis_client_account_primary
              valueFrom:
                configMapKeyRef:
                  name: account-root-ca
                  key: public_key
            - name: ipiis_client_account_primary_address
              value: 0.0.0.0:9801
            - name: ipiis_server_port
              value: "9805"
            - name: DATABASE_URL
              value: "postgres://ipis@postgres/ipdis"
          ports:
            - name: ipiis
              protocol: TCP
              containerPort: 9805
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            # limits:
            #   cpu: "4"
            #   memory: 1Gi
