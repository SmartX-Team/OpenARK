# Copyright (c) 2023 Ho Kim (ho.kim@ulagbulag.io). All rights reserved.
# Use of this source code is governed by a GPL-3-style license that can be
# found in the LICENSE file.

# Configure user-specific environment variables
{% set user_gid = spec.user.gid | default(value=2000) %}
{% set user_name = spec.user.name | default(value='user') %}
{% set user_shell = spec.user.shell | default(value='sh') %}
{% set user_sudo = spec.user.sudo | default(value=false) %}
{% set user_uid = spec.user.uid | default(value=2000) %}

###############################################################################
#   BEGIN Container Provider Definition                                       #
###############################################################################
{% if spec.container -%}

# Be ready for packaging
{% for image_name, image in spec.container -%}
FROM "{{ default.distImageList[image.dist.name] }}:{{ image.dist.version }}" as {{ image_name }}

###############################################################################
#   BEGIN Linux Distribution: ArchLinux                                       #
###############################################################################
{% if image.dist.name == 'archlinux' -%}

# Install feature dependencies
RUN true \
    # Install reflector and retrieve the latest mirror list
    # NOTE: it will make the overall build time faster
    && pacman -Sy --needed --noconfirm \
        "reflector" \
    && reflector >"/etc/pacman.d/mirrorlist" \
    # Install common packages
    && pacman -Sy --needed --noconfirm \
        "curl" \
        "git" \
    # Add a build-only user
    && BUILDER_GID="999" \
    && BUILDER_UID="999" \
    && BUILDER_NAME="builder" \
    && BUILDER_SHELL="sh" \
    && groupadd -g "${BUILDER_GID}" -o "${BUILDER_NAME}" \
    && useradd -u "${BUILDER_UID}" -g "${BUILDER_GID}" \
        -s "/bin/${BUILDER_SHELL}" -m -o "${BUILDER_NAME}" \
    # Install YAY (AUR package manager)
    && ARCH_YAY_SNAPSHOP_URL="https://aur.archlinux.org/cgit/aur.git/snapshot/yay.tar.gz" \
    && ARCH_YAY_SNAPSHOP_FILENAME="/tmp/${ARCH_YAY_SNAPSHOP_URL##*/}" \
    && ARCH_YAY_SNAPSHOP_PKGDIR="${ARCH_YAY_SNAPSHOP_FILENAME%%.*}" \
    && ARCH_YAY_SNAPSHOP_DEPENDENCIES="binutils fakeroot gcc make go" \
    && curl -s "${ARCH_YAY_SNAPSHOP_URL}" -o "${ARCH_YAY_SNAPSHOP_FILENAME}" \
    && tar -x -C "$(dirname "${ARCH_YAY_SNAPSHOP_PKGDIR}")" -f "${ARCH_YAY_SNAPSHOP_FILENAME}" \
    && pushd "${ARCH_YAY_SNAPSHOP_PKGDIR}" \
    && chown -R "${BUILDER_UID}:${BUILDER_GID}" . \
    && pacman -S --needed --noconfirm ${ARCH_YAY_SNAPSHOP_DEPENDENCIES} \
    && su "${BUILDER_NAME}" bash -c 'makepkg -s' \
    && pacman -U --noconfirm ./*.pkg.tar.zst \
    && pacman -Rcns --noconfirm ${ARCH_YAY_SNAPSHOP_DEPENDENCIES} \
    && popd \
    && rm -rf "${ARCH_YAY_SNAPSHOP_FILENAME}" "${ARCH_YAY_SNAPSHOP_PKGDIR}" \
    # Remove the build-only user
    && userdel "${BUILDER_NAME}" \
    # Create YAY cache directory
    && mkdir '/var/cache/yay' \
    # Cleanup
    && rm -rf "/home/${BUILDER_NAME}" \
    && pacman -Scc --noconfirm \
    && rm -r /var/lib/pacman/sync/*

# Install permission dependencies
{% set permissions = spec.permissions | sort(attribute='name') | unique(attribute='name') %}
{% if permissions | length > 0 -%}
RUN true \
    && yay -Sy --needed --noconfirm \
{% for permission in permissions -%}
# --- BEGIN PERMISSION DEPENDENCY ---
{% if permission.name == 'audio' -%}
        "pipewire" \
{%- endif -%}
{%- if permission.name == 'graphics' -%}
        "libglvnd" \
        "mesa" \
        "mesa-utils" \
        "vulkan-tools" \
{%- endif %}
# --- END PERMISSION DEPENDENCY ---
{%- endfor %}
    # Cleanup
    && yay -Scc --noconfirm \
    && rm -r /var/lib/pacman/sync/*
{%- endif %}

# Install dependencies
{% set dependencies = image.dependencies | sort(attribute='name') | unique(attribute='name') %}
{% if dependencies | length > 0 -%}
RUN true \
    && yay -Sy --needed --noconfirm {{ dependencies | map(attribute='name') | quote | join(sep=' ') }} \
    # Cleanup
    && yay -Scc --noconfirm \
    && rm -r /var/lib/pacman/sync/*
{%- endif %}

# Configure user-specific environment variables
RUN groupadd -g "{{ user_gid }}" -o "{{ user_name }}" \
    && useradd -u "{{ user_uid }}" -g "{{ user_gid }}" -G "audio,input,render,video" \
        -s "/bin/{{ user_shell }}" -m -o "{{ user_name }}" \
    && echo -e "{{ user_uid }}:$(( {{ user_uid }} + 1 )):$(( 65535 - {{ user_uid }} ))" > /etc/subuid \
    && echo -e "{{ user_gid }}:$(( {{ user_gid }} + 1 )):$(( 65535 - {{ user_gid }} ))" > /etc/subgid \
    # Install user-specific dependencies
    && yay -Sy --needed --noconfirm \
        "{{ user_shell }}" \
{% if user_sudo -%}
        "sudo" \
{%- endif %}
    # Allow passwordless sudo command
{% if user_sudo -%}
    && echo "{{ user_name }} ALL=(ALL) NOPASSWD: ALL" >/etc/sudoers.d/10-wheel \
    && chmod 440 /etc/sudoers.d/10-wheel \
{%- endif %}
    # Cleanup
    && yay -Scc --noconfirm \
    && rm -r /var/lib/pacman/sync/*

###############################################################################
#   END Linux Distributions                                                   #
###############################################################################
{%- endif %}

# Checkout to base image
{%- endfor %}
{% set image_name = 'base' %}
{% set image = spec.container[image_name] %}
FROM "{{ image_name }}"

# Configure package
{% if image.entrypoint | length > 0 -%}
{% set entrypoint = image.entrypoint %}
{%- else -%}
{% set entrypoint = [metadata.name] %}
{%- endif %}

CMD [ ]
ENTRYPOINT [ "/usr/bin/env", {{ entrypoint | quote | join(sep=', ') }} ]
WORKDIR "/home/{{ user_name }}"

###############################################################################
#   END Container Provider Definition                                         #
###############################################################################
{% endif -%}
