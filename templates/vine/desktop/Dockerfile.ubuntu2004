# Copyright (c) 2023 Ho Kim (ho.kim@ulagbulag.io). All rights reserved.
# Use of this source code is governed by a GPL-3-style license that can be
# found in the LICENSE file.

# Configure environment variables
ARG CUDA_VERSION="11.4.2"
ARG NVIDIA_IMAGE_NAME="cuda"
ARG UBUNTU_VERSION="20.04"

# Configure user-specific environment variables
ARG USER_GID="2000"
ARG USER_NAME="user"
ARG USER_SHELL="zsh"
ARG USER_SUDO="true"
ARG USER_UID="2000"

# Be ready for serving
FROM "nvcr.io/nvidia/${NVIDIA_IMAGE_NAME}:${CUDA_VERSION}-runtime-ubuntu${UBUNTU_VERSION}"

# Load user-specific environment variables
ARG USER_GID
ARG USER_NAME
ARG USER_SHELL
ARG USER_SUDO
ARG USER_UID

# Package Manager Configuration
ARG DEBIAN_FRONTEND='noninteractive'

# SystemD Configuration
ENV container docker
STOPSIGNAL SIGRTMIN+3

# Client Configuration
WORKDIR /root/
ENTRYPOINT [ "/usr/bin/env" ]
CMD [ "/usr/bin/systemctl", "init", "vine-desktop.service", "--system" ]

# Volumes Configuration
## home.user
VOLUME [ "/home/${USER_NAME}" ]

# Add core repositories
ADD ./apt/keyrings/* /etc/apt/keyrings/
ADD ./apt/sources.list.d/*.list /etc/apt/sources.list.d/
RUN true \
    # Install dependencies
    && mv '/etc/apt/sources.list.d/' '/etc/apt/sources.list.d.bak/' \
    && apt-get update && apt-get install -y \
    gettext-base \
    && mv '/etc/apt/sources.list.d.bak/' '/etc/apt/sources.list.d/' \
    # Get OS informations
    && . /etc/os-release \
    && export ARCH="$(uname -m)" \
    && export VERSION_ID_MAJOR="${VERSION_ID%\.[0-9]*}" \
    && export VERSION_ID_MINOR="${VERSION_ID#[0-9]*\.}" \
    # Update keyrings
    && find /etc/apt/keyrings/ -type f -exec sh -c \
    'cat "{}" | gpg --dearmor --yes -o "/etc/apt/keyrings/$(basename "{}")"' \; \
    # Update repositories
    && find /etc/apt/sources.list.d/ -type f -exec sh -c \
    'mv "{}" "{}.bak" && envsubst < "{}.bak" >"{}" && rm "{}".bak' \; \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install init program
ADD ./systemd/vine-desktop.service "/usr/lib/systemd/system/vine-desktop.service"
ARG INIT_JOURNALCTL_URL="https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/journalctl3.py"
ARG INIT_SYSTEMCTL_URL="https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl3.py"
RUN apt-get update && apt-get install -y \
    curl \
    procps \
    python3 \
    && curl -s "${INIT_JOURNALCTL_URL}" -o '/usr/bin/journalctl' \
    && curl -s "${INIT_SYSTEMCTL_URL}" -o '/usr/bin/systemctl' \
    && rm -rf '/etc/systemd/system/multi-user.target.wants' \
    && mkdir -p '/etc/systemd/system/multi-user.target.wants' \
    && ln -sf \
    '/usr/lib/systemd/system/vine-desktop.service' \
    '/etc/systemd/system/multi-user.target.wants/vine-desktop.service' \
    && mkdir -p '/opt/scripts' \
    && echo 'sleep infinity' >'/opt/scripts/entrypoint-desktop.sh' \
    && chmod a+x /opt/scripts/* \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install core dependencies
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    curl \
    gpg \
    libgles2-mesa-dev \
    libglfw3-dev \
    libhwloc-dev \
    mesa-vulkan-drivers \
    pulseaudio \
    pulseaudio-module-bluetooth \
    wmctrl \
    x11-utils \
    xdotool \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install locale dependencies
RUN apt-get update && apt-get install -y \
    language-pack-ko \
    # Set default locale
    && locale-gen --purge en_US.UTF-8 \
    && echo -e 'LANG="en_US.UTF-8"\nLANGUAGE="en_US:en"\n' | tee /etc/default/locale \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install development environment dependencies
RUN apt-get update && apt-get install -y \
    crun \
    fuse-overlayfs \
    git \
    kubectl \
    nano \
    nodejs \
    openssh-client \
    pciutils \
    python3 \
    python3-pip \
    screen \
    sudo \
    uidmap \
    "${USER_SHELL}" \
    vim \
    wget \
    zip \
    # Allow passwordless sudo command
    && test "x${USER_SUDO}" = "xtrue" \
    && echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >/etc/sudoers.d/10-wheel \
    && chmod 440 /etc/sudoers.d/10-wheel \
    # Docker (Podman) Configuration
    && chmod u+s /usr/bin/newuidmap /usr/bin/newgidmap \
    # Environment Variables Configuration
    && echo '# local binary path registration' >/etc/profile.d/path-local-bin.sh \
    && echo 'export PATH=${PATH}:/usr/local/bin' >>/etc/profile.d/path-local-bin.sh \
    && echo 'export PATH=${PATH}:/opt/bin' >>/etc/profile.d/path-local-bin.sh \
    && ln -sf /usr/local/bin /opt/bin \
    && echo '# local library path registration' >/etc/ld.so.conf.d/100-path-local-lib.conf \
    && echo '/usr/local/lib' >>/etc/ld.so.conf.d/100-path-local-lib.conf \
    && echo '/usr/local/lib64' >>/etc/ld.so.conf.d/100-path-local-lib.conf \
    && ldconfig \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install desktop environment dependencies
RUN apt-get update && apt-get install -y \
    blueman \
    bluez \
    code \
    dbus-x11 \
    file-roller \
    gnome-bluetooth \
    ibus-hangul \
    network-manager \
    network-manager-gnome \
    plank \
    s3fs \
    sqlite \
    ssh-askpass \
    thunar thunar-archive-plugin thunar-volman \
    tumbler \
    xdg-dbus-proxy \
    xfce4-appfinder xfce4-notifyd xfce4-panel xfce4-pulseaudio-plugin \
    xfce4-session xfce4-settings xfce4-terminal \
    xfconf xfdesktop4 xfwm4 \
    xmlstarlet \
    # Remove confliected repositories
    && rm /etc/apt/sources.list.d/microsoft.list \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install internet browsers
RUN apt-get update && apt-get install -y \
    firefox \
    google-chrome-stable \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Install utilities - Custom
ARG ADDONS_HOME="/opt/openark/vdi/desktop"
ADD ./addons "${ADDONS_HOME}"
RUN chmod -R a+x "${ADDONS_HOME}/bin" \
    && for file in ${ADDONS_HOME}/share/applications/*.desktop; do true \
    && ln -s "${file}" "/usr/share/applications/$(basename "${file}")" \
    ; done \
    && for file in ${ADDONS_HOME}/share/autostart/*.desktop; do true \
    && ln -s "${file}" "/etc/xdg/autostart/$(basename "${file}")" \
    ; done

# Add firefox preferences
ADD ./browser/firefox/autoconfig.js /usr/lib64/firefox/defaults/pref/
ADD ./browser/firefox/firefox.cfg /usr/lib64/firefox/

# Add read-only shared directory
RUN mkdir -p /opt/public/ \
    && chown -R "${USER_UID}:${USER_GID}" /opt/public/

# Add scripts
ADD ./scripts /opt/scripts/
RUN chmod 0555 /opt/scripts/*

# Add a user
RUN ldconfig \
    && groupadd -g "${USER_GID}" -o "${USER_NAME}" \
    && useradd -u "${USER_UID}" -g "${USER_GID}" -G "audio,cdrom,input,pulse,render,video" \
    -s "/bin/${USER_SHELL}" -m -o "${USER_NAME}" \
    && echo -e "${USER_UID}:2001:65535" > /etc/subuid \
    && echo -e "${USER_GID}:2001:65535" > /etc/subgid
USER "${USER_NAME}"
WORKDIR "/home/${USER_NAME}"
