all:
  children:
    kube_control_plane:
    kube_node:
    calico_rr:
      hosts: {}
    etcd:
    k8s_cluster_default:
      vars: {}
    k8s_cluster:
      children:
        kube_control_plane:
        kube_node:
      vars:
        #############################
        # k8s-cluster
        #############################

        ### fail with swap on (default true)
        kubelet_fail_swap_on: true

        # An alternative flexvolume plugin directory
        kubelet_flexvolumes_plugins_dir: /var/lib/kubelet/volumeplugins

        ## Container runtime
        ## docker for docker, crio for cri-o and containerd for containerd.
        ## Additionally you can set this to kubeadm if you want to install etcd using kubeadm
        ## Kubeadm etcd deployment is experimental and only available for new deployments
        ## If this is not set, container manager will be inherited from the Kubespray defaults
        ## and not from k8s_cluster/k8s-cluster.yml, which might not be what you want.
        ## Also this makes possible to use different container manager for etcd nodes.
        container_manager: containerd # docker (system/socket) should be disabled
        # Versions
        # FIXME: Rook-Ceph on Flatcar OS is not working on containerd version >= 1.6.0
        # See also: https://github.com/rook/rook/issues/10110
        # containerd_version: 1.5.9

        ## Settings for etcd deployment type
        # Set this to docker if you are using container_manager: docker
        etcd_deployment_type: host # data is stored in /opt/etcd
        # Directory where etcd data stored
        etcd_data_dir: /opt/etcd
        etcd_config_dir: /etc/etcd

        # Choose network plugin (cilium, calico, kube-ovn, weave or flannel. Use cni for generic cni plugin)
        # Can also be set to 'cloud', which lets the cloud provider setup appropriate routing
        kube_network_plugin: calico

        ## Settings for calico CNI
        # add default ippool blockSize (defaults kube_network_node_prefix)
        calico_pool_blocksize: 26
        # Global as_num (/calico/bgp/v1/global/as_num)
        global_as_num: "64512"
        # You can set MTU value here. If left undefined or empty, it will
        # not be specified in calico CNI config, so Calico will use built-in
        # defaults. The value should be a number, not a string.
        calico_mtu: 9000
        # Choose data store type for calico: "etcd" or "kdd" (kubernetes datastore)
        # The default value for calico_datastore is set in role kubespray-default
        calico_datastore: kdd
        # Calico container settings
        calico_allow_ip_forwarding: false
        # Should calico ignore kernel's RPF check setting,
        # see https://github.com/projectcalico/felix/blob/ab8799eaea66627e5db7717e62fca61fd9c08646/python/calico/felix/config.py#L198
        calico_node_ignorelooserpf: false
        # Advertise Cluster IPs
        calico_advertise_cluster_ips: true
        # Advertise Service LoadBalancer IPs
        calico_advertise_service_loadbalancer_ips:
          - 192.168.0.0/24 # Dev
        # Configure peering with router(s) at global scope
        peer_with_router: false
        # Set calico network backend: "bird", "vxlan" or "none"
        # bird enable BGP routing, required for ipip and no encapsulation modes
        calico_network_backend: bird # enable BGP routing
        # Enable BGP encapsulation mode
        calico_ipip_mode: Never
        calico_vxlan_mode: Never
        # Enable eBPF mode
        calico_bpf_enabled: false

        # Setting multi_networking to true will install Multus: https://github.com/intel/multus-cni
        kube_network_plugin_multus: false

        # internal network. When used, it will assign IP
        # addresses from this range to individual pods.
        # This network must be unused in your network infrastructure!
        kube_pods_subnet: 10.48.0.0/12
        kube_child_pods_subnet: 10.96.0.0/12

        # internal network node size allocation (optional). This is the size allocated
        # to each node for pod IP address allocation. Note that the number of pods per node is
        # also limited by the kubelet_max_pods variable which defaults to 110.
        #
        # Example:
        # Up to 64 nodes and up to 254 or kubelet_max_pods (the lowest of the two) pods per node:
        #  - kube_pods_subnet: 10.233.64.0/18
        #  - kube_network_node_prefix: 24
        #  - kubelet_max_pods: 110
        #
        # Example:
        # Up to 128 nodes and up to 126 or kubelet_max_pods (the lowest of the two) pods per node:
        #  - kube_pods_subnet: 10.233.64.0/18
        #  - kube_network_node_prefix: 25
        #  - kubelet_max_pods: 110
        kube_network_node_prefix: 26

        # Kubernetes internal network for services, unused block of space.
        kube_service_addresses: 10.64.0.0/12 # same as calico CIDR
        kube_child_service_addresses: 10.112.0.0/12 # same as calico CIDR

        # Configure Dual Stack networking (i.e. both IPv4 and IPv6)
        enable_dual_stack_networks: false # disable IPv6

        # configure arp_ignore and arp_announce to avoid answering ARP queries from kube-ipvs0 interface
        # must be set to true for MetalLB to work
        kube_proxy_strict_arp: true # set to true for MetalLB to work

        # DNS configuration.
        # Kubernetes cluster name, also will be used as DNS domain
        cluster_name: ops.netai-cloud # append `ops.` to prevent `netai-cloud.` from begin TLD

        ## Upstream dns servers
        upstream_dns_servers:
          - 1.1.1.1
          - 8.8.8.8

        # Enable nodelocal dns cache
        enable_nodelocaldns: true

        # Enable k8s_external plugin for CoreDNS
        enable_coredns_k8s_external: true
        coredns_k8s_external_zone: k8s.netai-cloud # Inter-cluster External DNS
        # Enable endpoint_pod_names option for kubernetes plugin
        enable_coredns_k8s_endpoint_pod_names: false

        #############################
        # addons
        #############################

        # Kubernetes dashboard
        # RBAC required. see docs/getting-started.md for access details.
        dashboard_enabled: true

        # Helm deployment
        helm_enabled: true

        # Metrics Server deployment
        metrics_server_enabled: true

        # Local volume provisioner deployment
        local_volume_provisioner_enabled: false
        # local_volume_provisioner_storage_classes:
        #   local-storage:
        #     host_dir: /mnt/disks
        #     mount_dir: /mnt/disks
        #     volume_mode: Filesystem
        #     fs_type: ext4
        #   fast-disks:
        #     host_dir: /mnt/fast-disks
        #     mount_dir: /mnt/fast-disks
        #     block_cleaner_command:
        #       - "/scripts/shred.sh"
        #       - "2"
        #     volume_mode: Filesystem
        #     fs_type: ext4

        # Cert manager deployment
        cert_manager_enabled: true
        cert_manager_namespace: cert-manager

        # MetalLB deployment
        metallb_enabled: true
        metallb_speaker_enabled: false
        metallb_protocol: bgp
        metallb_peers: [] # borrow calico BGP peers
        metallb_ip_range:
          - 192.168.0.0/24 # for Development
        metallb_pool_name: dev
        metallb_auto_assign: true
        metallb_avoid_buggy_ips: true
