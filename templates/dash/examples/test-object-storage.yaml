---
apiVersion: v1
kind: Namespace
metadata:
  name: my-storage-borrowed
---
apiVersion: v1
kind: Namespace
metadata:
  name: my-storage-cloned
---
apiVersion: v1
kind: Namespace
metadata:
  name: my-storage-cloned-pull
---
apiVersion: v1
kind: Namespace
metadata:
  name: my-storage-cloned-push
---
apiVersion: v1
kind: Namespace
metadata:
  name: my-storage-owned
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-user-0
  namespace: my-storage-borrowed
immutable: true
type: Opaque
# TODO(user): change your own secret!
data:
  CONSOLE_ACCESS_KEY: T0JKSXJaUzNPRnpmSEpWZQ==
  CONSOLE_SECRET_KEY: b3hOVkpibWd4WFpjSGt5NlNrNlF6aTZzUVRxVmRYeEc=
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-user-0
  namespace: my-storage-cloned
immutable: true
type: Opaque
# TODO(user): change your own secret!
data:
  CONSOLE_ACCESS_KEY: T0JKSXJaUzNPRnpmSEpWZQ==
  CONSOLE_SECRET_KEY: b3hOVkpibWd4WFpjSGt5NlNrNlF6aTZzUVRxVmRYeEc=
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-user-0
  namespace: my-storage-cloned-pull
immutable: true
type: Opaque
# TODO(user): change your own secret!
data:
  CONSOLE_ACCESS_KEY: T0JKSXJaUzNPRnpmSEpWZQ==
  CONSOLE_SECRET_KEY: b3hOVkpibWd4WFpjSGt5NlNrNlF6aTZzUVRxVmRYeEc=
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-user-0
  namespace: my-storage-cloned-push
immutable: true
type: Opaque
# TODO(user): change your own secret!
data:
  CONSOLE_ACCESS_KEY: T0JKSXJaUzNPRnpmSEpWZQ==
  CONSOLE_SECRET_KEY: b3hOVkpibWd4WFpjSGt5NlNrNlF6aTZzUVRxVmRYeEc=
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-user-0
  namespace: my-storage-owned
immutable: true
type: Opaque
# TODO(user): change your own secret!
data:
  CONSOLE_ACCESS_KEY: T0JKSXJaUzNPRnpmSEpWZQ==
  CONSOLE_SECRET_KEY: b3hOVkpibWd4WFpjSGt5NlNrNlF6aTZzUVRxVmRYeEc=
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage
  namespace: my-storage-borrowed
spec:
  objectStorage:
    borrowed:
      endpoint: http://minio.my-storage-owned.svc.ops.openark/
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage
  namespace: my-storage-cloned
spec:
  objectStorage:
    cloned:
      endpoint: http://minio.my-storage-owned.svc.ops.openark/
      resources:
        requests:
          storage: 1Ti
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
      totalNodes: 1
      totalVolumesPerNode: 4
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage
  namespace: my-storage-cloned-pull
spec:
  objectStorage:
    owned:
      resources:
        requests:
          storage: 1Ti
      totalNodes: 1
      totalVolumesPerNode: 4
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage-cloned-push
  namespace: my-storage-cloned-pull
spec:
  objectStorage:
    borrowed:
      endpoint: http://minio.my-storage-cloned-push.svc.ops.openark/
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage
  namespace: my-storage-cloned-push
spec:
  objectStorage:
    owned:
      resources:
        requests:
          storage: 1Ti
      totalNodes: 1
      totalVolumesPerNode: 4
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage-owned
  namespace: my-storage-cloned-push
spec:
  objectStorage:
    borrowed:
      endpoint: http://minio.my-storage-owned.svc.ops.openark/
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: my-object-storage
  namespace: my-storage-owned
spec:
  objectStorage:
    owned:
      resources:
        requests:
          storage: 1Ti
      totalNodes: 1
      totalVolumesPerNode: 4
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: my-bucket-borrowed
  namespace: my-storage-borrowed
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: my-bucket-cloned
  namespace: my-storage-cloned
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: my-bucket-cloned-pull
  namespace: my-storage-cloned-pull
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: my-bucket-cloned-push
  namespace: my-storage-cloned-push
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: my-bucket-cloned-push
  namespace: my-storage-owned
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: my-bucket-owned
  namespace: my-storage-owned
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-borrowed
  namespace: my-storage-borrowed
spec:
  deletionPolicy: Delete
  model: my-bucket-borrowed
  storage:
    owned:
      target: my-object-storage
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-cloned
  namespace: my-storage-cloned
spec:
  deletionPolicy: Retain
  model: my-bucket-cloned
  storage:
    owned:
      target: my-object-storage
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-cloned-pull
  namespace: my-storage-cloned-pull
spec:
  deletionPolicy: Delete
  model: my-bucket-cloned-pull
  storage:
    cloned:
      source: my-object-storage-cloned-push # Sender
      sourceBindingName: my-bucket-cloned-push
      target: my-object-storage # Receiver
      syncPolicy:
        pull: OnCreate
        push: OnDelete
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-cloned-pull
  namespace: my-storage-cloned-push
spec:
  deletionPolicy: Retain
  model: my-bucket-cloned-push
  storage:
    owned:
      target: my-object-storage
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-cloned-push
  namespace: my-storage-cloned-push
spec:
  deletionPolicy: Retain
  model: my-bucket-cloned-push
  storage:
    cloned:
      source: my-object-storage-owned # Receiver
      sourceBindingName: my-bucket-cloned-push
      target: my-object-storage # Sender
      syncPolicy:
        pull: Never
        push: Always
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-cloned-push
  namespace: my-storage-owned
spec:
  deletionPolicy: Retain
  model: my-bucket-cloned-push
  storage:
    owned:
      target: my-object-storage
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorageBinding
metadata:
  name: my-bucket-owned
  namespace: my-storage-owned
spec:
  deletionPolicy: Retain
  model: my-bucket-owned
  storage:
    owned:
      target: my-object-storage
