---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ metadata.name }}"
  namespace: "{{ metadata.namespace }}"
  labels:
    name: "{{ metadata.name }}"
    kissService: "false"
    serviceType: dash
spec:
  ttlSecondsAfterFinished: 1
  template:
    metadata:
      labels:
        name: "{{ metadata.name }}"
        kissService: "false"
        serviceType: dash
    spec:
      affinity:
        nodeAffinity:
          # KISS normal control plane nodes should be preferred
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                    operator: DoesNotExist
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - ControlPlane
      restartPolicy: OnFailure
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: kiss-system
      containers:
{% if spec.box.spec.power.type == 'IntelAMT' %}
        - name: power-management-wsmancli
          image: quay.io/ulagbulag/openark-wsmancli:latest
          args:
            - power
            - {{ spec.power }}
          env:
            - name: AMT_HOSTNAME
              value: "{{ spec.box.spec.power.address }}"
            - name: AMT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kiss-config
                  key: power_intel_amt_username
            - name: AMT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kiss-config
                  key: power_intel_amt_password
{% elif spec.box.spec.power.type == 'Ipmi' %}
        - name: power-management-ipmitool
          image: quay.io/ulagbulag/openark-ipmitool:latest
          args:
            - power
            - {{ spec.power }}
{% endif %}
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            limits:
              cpu: 100m
              memory: 100Mi
