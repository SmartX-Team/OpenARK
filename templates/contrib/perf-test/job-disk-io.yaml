---
apiVersion: batch/v1
kind: Job
metadata:
  name: perf-test-disk-io
  labels:
    app.kubernetes.io/component: perf-test-disk-io
    app.kubernetes.io/instance: perf-test-disk-io
    app.kubernetes.io/managed-by: perf-test
    app.kubernetes.io/part-of: perf-test
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: perf-test-disk-io
        app.kubernetes.io/instance: perf-test-disk-io
        app.kubernetes.io/managed-by: perf-test
        app.kubernetes.io/part-of: perf-test
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Compute
            - weight: 2
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Gateway
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Compute
                      - ControlPlane
                      - Gateway
      containers:
        - name: shell
          image: docker.io/library/debian:stable
          imagePullPolicy: Always
          command:
            - /usr/bin/env
            - /bin/bash
            - "-c"
          args:
            - |
              #!/bin/bash
              # Copyright (c) 2024 Ho Kim (ho.kim@ulagbulag.io). All rights reserved.
              # Use of this source code is governed by a GPL-3-style license that can be
              # found in the LICENSE file.

              # Prehibit errors
              set -e -o pipefail

              ###########################################################
              #   Download fio                                          #
              ###########################################################

              # Install
              apt-get update
              apt-get install -y fio

              # Cleanup
              apt-get clean all
              rm -rf /var/lib/apt/lists/*

              ###########################################################
              #   Cleanup                                               #
              ###########################################################

              rm -rf /data/*

              ###########################################################
              #   Configuration                                         #
              ###########################################################

              FILE_OUTPUT_PREFIX="/out/${NAME}"

              ARGS=""
              ARGS+="--direct ${DIRECT} "
              ARGS+="--fsync ${FSYNC} "
              ARGS+="--group_reporting "
              ARGS+="--iodepth ${IO_DEPTH} "
              ARGS+="--numjobs ${NUM_JOBS} "
              ARGS+="--runtime ${DURATION} "
              ARGS+="--size ${FILE_SIZE} "
              ARGS+="--time_based "

              ARGS+="--directory /data "
              # ARGS+="--ioengine rbd "
              # ARGS+="--rbdname rbd0 "

              ###########################################################
              #   Serial Read                                           #
              ###########################################################

              echo '[serial-read]'
              fio --name "${NAME}_read" --rw 'read' --output "${FILE_OUTPUT_PREFIX}_read.log" \
                --bs "${FILE_BLOCK_UNIT_SIZE}" ${ARGS}

              ###########################################################
              #   Serial Write                                          #
              ###########################################################

              echo '[serial-write]'
              fio --name "${NAME}_write" --rw 'write' --output "${FILE_OUTPUT_PREFIX}_write.log" \
                --bs "${FILE_BLOCK_UNIT_SIZE}" ${ARGS}

              ###########################################################
              #   Random Read                                           #
              ###########################################################

              # echo '[random-read]'
              # fio --name "${NAME}_randread" --rw 'randread' --output "${FILE_OUTPUT_PREFIX}_randread.log" \
              #   --bs '4K' ${ARGS}

              ###########################################################
              #   Random Write                                          #
              ###########################################################

              # echo '[random-write]'
              # fio --name "${NAME}_randwrite" --rw 'randwrite' --output "${FILE_OUTPUT_PREFIX}_randwrite.log" \
              #   --bs '4K' ${ARGS}
          env:
            - name: DIRECT
              value: "1"
            - name: DURATION
              value: "60"
            - name: FILE_BLOCK_UNIT_SIZE
              value: 4M
            - name: FILE_PATH
              value: /data/testfile
            - name: FILE_SIZE
              value: 1G
            - name: FSYNC
              value: "1"
            - name: IO_DEPTH
              value: "64"
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: NUM_JOBS
              value: "12"
          # volumeDevices:
          #   - name: data
          #     devicePath: /dev/rbd0
          volumeMounts:
            - name: data
              mountPath: /data
            - name: collector
              mountPath: /out
      restartPolicy: Never
      terminationGracePeriodSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: perf-test-disk-io
        - name: collector
          persistentVolumeClaim:
            claimName: perf-test-collector
