---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matchbox
  namespace: kiss
  labels:
    name: matchbox
    kissService: "true"
    serviceType: internal
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      name: matchbox
  template:
    metadata:
      labels:
        name: matchbox
        kissService: "true"
        serviceType: internal
    spec:
      affinity:
        nodeAffinity:
          # KISS normal control plane nodes should be preferred
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                    operator: DoesNotExist
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - ControlPlane
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: init-data
          image: docker.io/ubuntu:rolling
          command:
            - bash
          args:
            - -c
            - |
              # Boot
              cp /var/lib/matchbox/assets/boot-raw/* /var/lib/matchbox/assets/boot/
              SSH_AUTHORIZED_KEYS_SED=$(sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//' <<< ${SSH_AUTHORIZED_KEYS})
              sed -i "s/NETWORK_WIRELESS_WIFI_SSID/${NETWORK_WIRELESS_WIFI_SSID}/g" /var/lib/matchbox/assets/boot/*.ks
              sed -i "s/NETWORK_WIRELESS_WIFI_KEY_MGMT/${NETWORK_WIRELESS_WIFI_KEY_MGMT}/g" /var/lib/matchbox/assets/boot/*.ks
              sed -i "s/NETWORK_WIRELESS_WIFI_KEY_PSK/${NETWORK_WIRELESS_WIFI_KEY_PSK}/g" /var/lib/matchbox/assets/boot/*.ks
              sed -i "s/ENV_SSH_AUTHORIZED_KEYS/${SSH_AUTHORIZED_KEYS_SED}/g" /var/lib/matchbox/assets/boot/*.ks
              sed -i "s/ENV_USERNAME/${USERNAME}/g" /var/lib/matchbox/assets/boot/*.ks

              # Ignition
              cp /var/lib/matchbox/ignition-raw/*.yaml /var/lib/matchbox/ignition/
              SSH_AUTHORIZED_KEYS_SED=$(sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//' <<< ${SSH_AUTHORIZED_KEYS})
              sed -i "s/ENV_SSH_AUTHORIZED_KEYS/${SSH_AUTHORIZED_KEYS_SED}/g" /var/lib/matchbox/ignition/*.yaml
              sed -i "s/ENV_USERNAME/${USERNAME}/g" /var/lib/matchbox/ignition/*.yaml
          env:
            - name: NETWORK_WIRELESS_WIFI_KEY_MGMT
              valueFrom:
                secretKeyRef:
                  name: kiss-config
                  key: network_wireless_wifi_key_mgmt
            - name: NETWORK_WIRELESS_WIFI_KEY_PSK
              valueFrom:
                secretKeyRef:
                  name: kiss-config
                  key: network_wireless_wifi_key_psk
            - name: NETWORK_WIRELESS_WIFI_SSID
              valueFrom:
                secretKeyRef:
                  name: kiss-config
                  key: network_wireless_wifi_ssid
            - name: SSH_AUTHORIZED_KEYS
              valueFrom:
                configMapKeyRef:
                  name: kiss-config
                  key: auth_ssh_key_id_ed25519_public
            - name: USERNAME
              valueFrom:
                configMapKeyRef:
                  name: kiss-config
                  key: auth_ssh_username
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            limits:
              cpu: 50m
              memory: 50Mi
          volumeMounts:
            - name: boot
              mountPath: /var/lib/matchbox/assets/boot
            - name: boot-raw
              mountPath: /var/lib/matchbox/assets/boot-raw
            - name: ignition
              mountPath: /var/lib/matchbox/ignition
            - name: ignition-raw
              mountPath: /var/lib/matchbox/ignition-raw
            - name: tmp
              mountPath: /tmp
      containers:
        - name: matchbox
          image: quay.io/poseidon/matchbox:v0.9.1-48-gddbed051
          env:
            - name: MATCHBOX_ADDRESS
              value: 0.0.0.0:8080
            - name: MATCHBOX_LOG_LEVEL
              value: debug
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: 8080
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            limits:
              cpu: 50m
              memory: 50Mi
          volumeMounts:
            - name: assets
              mountPath: /var/lib/matchbox/assets
            - name: boot
              mountPath: /var/lib/matchbox/assets/boot
            - name: groups
              mountPath: /var/lib/matchbox/groups
            - name: ignition
              mountPath: /var/lib/matchbox/ignition
            - name: profiles
              mountPath: /var/lib/matchbox/profiles
      volumes:
        - name: assets
          emptyDir: {}
        - name: boot
          emptyDir: {}
        - name: boot-raw
          configMap:
            name: matchbox-boot
            defaultMode: 256
        - name: groups
          configMap:
            name: matchbox-groups
            defaultMode: 256
        - name: ignition
          emptyDir: {}
        - name: ignition-raw
          configMap:
            name: matchbox-ignition
            defaultMode: 256
        - name: profiles
          configMap:
            name: matchbox-profiles
            defaultMode: 256
        - name: tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: matchbox
  namespace: kiss
  labels:
    ark.ulagbulag.io/is-external: "true"
spec:
  type: ClusterIP
  selector:
    name: matchbox
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
