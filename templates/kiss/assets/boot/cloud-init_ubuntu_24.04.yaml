#cloud-config
version: 1
autoinstall:
  version: 1

  apt:
    fallback: abort
    geoip: true
    preserve_sources_list: false
    mirror-selection:
      primary:
        - country-mirror
  kernel:
    flavor: hwe
  keyboard:
    layout: us
  locale: en_US.UTF-8
  network:
    version: 2
    renderer: NetworkManager
    ethernets:
      alleths:
        match:
          name: en*
        dhcp4: true
  # refresh-installer:
  #   update: true
  shutdown: reboot
  timezone: geoip
  updates: security

  ssh:
    install-server: true
    allow-pw: false
    authorized-keys:
      - "ENV_SSH_AUTHORIZED_KEYS"

  user-data:
    disable_root: true
    # package_update: true
    # package_upgrade: true
    users:
      - name: kiss
        groups: docker, sudo, users, wheel
        lock_passwd: false
        passwd: $6$Tt5aacrWjfFz/v6l$lfIW/m1.dYdoJlRnYrtx/pKDyfUTJg8Sh/rbsOcMD2vJa.4rAzSZy7Lp89Q/3ijK97RQUm/zS0cApJmLFLwyx0
        shell: /bin/bash
        ssh_authorized_keys:
          - "ENV_SSH_AUTHORIZED_KEYS"
        sudo: ALL=(ALL) NOPASSWD:ALL

  storage:
    swap:
      size: 0
    layout:
      name: direct
      match:
        # ssd: true
        size: smallest

  early-commands:
    # Installer Network Configuration
    - |
      cat <<EOF >>/etc/systemd/resolved.conf
      [Resolve]
      DNS=10.64.0.3
      EOF
      systemctl restart systemd-resolved.service
    - |
      mkdir -p /etc/NetworkManager/conf.d/
      cat <<EOF >/etc/NetworkManager/conf.d/99-systemd.conf
      [main]
      dns=default
      rc-manager=resolvconf
      EOF
    - rm -f /etc/netplan/50-cloud-init*
    - |
      cat <<EOF >/etc/netplan/50-cloud-init.yaml
      network:
        version: 2
        renderer: NetworkManager
        ethernets:
          alleths:
            match:
              name: en*
            dhcp4: true
      EOF
    - >
      apt-get update && apt-get install -y network-manager
      && systemctl disable --now systemd-networkd.service systemd-networkd.socket
      && systemctl enable --now NetworkManager.service
      && nmcli connection reload
      && for dev in $(nmcli connection show --active | awk '{print $4}' | grep -P '^en'); do
      nmcli connection down "${dev}" || true
      ; done
    - until netplan apply; do sleep 3; done
    - until curl "http://assets.kiss.svc.ops.openark"; do netplan apply || true; sleep 30; done
  late-commands:
    # Install dependencies
    - >
      curtin in-target --target=/target -- apt-get update
      && curtin in-target --target=/target -- apt-get install -y
      bc
      bluez
      build-essential
      curl
      git
      haveged
      iw
      libspa-0.2-bluetooth
      network-manager
      nfs-common
      pciutils
      pipewire
      pipewire-audio-client-libraries
      podman
      pulseaudio-utils
      ubuntu-server
      vim
      wget
      wireless-tools
    # Execute Post-installation Scripts
    - >
      curl -o /target/tmp/post-install.sh
      "http://assets.kiss.svc.ops.openark/boot/cloud-init_ubuntu_$(awk -F'=' '/VERSION_ID/{ gsub(/"/,""); print $2}' /etc/os-release)_post-install.sh"
      && chmod a+x /target/tmp/post-install.sh
    - curtin in-target --target=/target -- /tmp/post-install.sh
    - rm -f /target/tmp/post-install.sh
