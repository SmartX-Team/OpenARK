---
- name: Determine whether kiss OS is installed in a disk
  stat:
    path: /boot/flatcar
  register: boot_file

- name: Check whether kiss OS is already configured
  set_fact:
    kiss_os_exists: >-
      {{
        boot_file.stat.exists
      }}

- name: Collect brief device informations
  loop: "{{ ansible_devices.items() }}"
  # filter the devices that has 1 or more physical IDs
  when: >-
    (item[1].links.ids | length) > 0
    and item[1].scheduler_mode != ''
  set_fact:
    # TODO: sort names numerically
    devices: >
      {{ devices|default([]) + [{
        'name': item[0],
        'size': (item[1].sectors | int) * (item[1].sectorsize | int),
      }] }}

- name: Find the most suitable device (>=200Gi)
  set_fact:
    device: "{{ devices | selectattr('size', 'ge', 200 * 1024 * 1024 * 1024) | sort(attribute='size,name') | first }}"

- name: Check whether kiss storage is already configured
  set_fact:
    kiss_storage_exists: >-
      {{
        kiss_os_exists
      and
        (not (kiss_group_force_reset | default(False)))
      and
        ('kiss' in ansible_lvm.vgs.keys())
      }}

- name: Cleanup disks
  when: not kiss_storage_exists
  include: storage-cleanup.yaml

- name: Provision disks
  include: storage-provision.yaml

- name: Reboot the boxes after installing OS (The task will be restarted)
  when: not kiss_os_exists
  reboot:
    reboot_timeout: 3600 # 1h (booting can take a long time)
